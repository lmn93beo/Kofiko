function strctGridParam = fnDefineGridModel_DualCircular()
% Generate a standard grid model (circular).
%
% The grid is just a collection of "holes" and their directions in 3D.
% They are represented by several arrays:
% m_afGridHolesX - X position (in mm)
% m_afGridHolesY - Y position (in mm)
% m_apt3fGridHolesNormals - Hole normal direction. Convention states that
% holes should be oriented towards NEGATIVE z direction. 
%
% In addition to "holes" the grid also has a 3D "structure". In this case,
% it is a small cylinder. with an additional plane to show its orientation.

strctGridParam.m_acParam = {
fnAddParameter('Theta0','Master Grid - Rotation Angle (deg)', 'Continuous', [-180 180], 0, true), ...
fnAddParameter('Theta1','Grid A - Rotation Angle (deg)', 'Continuous', [-180 180], 0, true), ...
fnAddParameter('Theta2','Grid B - Rotation Angle (deg)', 'Continuous', [-180 180], 0, true), ...
fnAddParameter('Phi1','Grid A - Tilt Angle (deg)', 'Continuous', [0 50], 0, false), ...
fnAddParameter('Phi2','Grid B - Tilt Angle (deg)', 'Continuous', [0 50], 0, false), ...
fnAddParameter('LongGrid','Grid Projection', 'Logical', [false true], true, false), ...
fnAddParameter('GridInnerDiam0','Master Grid - Outer Diameter (mm)', 'Continuous', [0 25], 17, false), ...
fnAddParameter('ShiftX1','Grid A - Center Position X (mm)', 'Continuous', [-20 20], -4, false), ...
fnAddParameter('ShiftY1','Grid A - Center Position Y (mm)', 'Continuous', [-20 20], 0, false), ...
fnAddParameter('HoleDist1','Grid A - In-Plane Inter-hole Dist(IHD) (mm)', 'Continuous', [0 5], 1, false), ...
fnAddParameter('HoleDistWhere1','Grid A - IHD measured on (tilted/nontilted) plane', 'String', [], 'tilted', false), ...
fnAddParameter('HoleDiam1','Grid A - Hole Diameter (mm)', 'Continuous', [0 5], 0.75, false), ...
fnAddParameter('NumHoles1','Grid A - Number of holes', 'String', [], 'auto', false), ...
fnAddParameter('OffsetX1','Grid A - Center Offset X (mm)', 'Continuous', [0 5], 0, false), ...
fnAddParameter('OffsetY1','Grid A - Center Offset Y (mm)', 'Continuous', [0 5], 0, false), ...
fnAddParameter('GridInnerDiam1','Grid A - Inner Diameter (mm)', 'Continuous', [0 25], 8, false), ...
fnAddParameter('ShiftX2','Grid B - Center Position X (mm)', 'Continuous', [-20 20], 4, false), ...
fnAddParameter('ShiftY2','Grid B - Center Position Y (mm)', 'Continuous', [-20 20], 0, false), ...
fnAddParameter('HoleDist2','Grid B - In-Plane Inter-hole Dist(IHD) (mm)', 'Continuous', [0 5], 1, false), ...
fnAddParameter('HoleDistWhere2','Grid B - IHD measured on (tilted/nontilted) plane', 'String', [], 'tilted', false), ...
fnAddParameter('HoleDiam2','Grid B - Hole Diameter (mm)', 'Continuous', [0 5], 0.75, false), ...
fnAddParameter('NumHoles2','Grid B - Number of holes', 'String', [], 'auto', false), ...
fnAddParameter('OffsetX2','Grid B - Center Offset X (mm)', 'Continuous', [0 5], 0, false), ...
fnAddParameter('OffsetY2','Grid B - Center Offset Y (mm)', 'Continuous', [0 5], 0, false), ...
fnAddParameter('GridInnerDiam2','Grid B - Inner Diameter (mm)', 'Continuous', [0 25], 8, false), ...
fnAddParameter('ClipInvalid','Clip invalid holes', 'Logical', [false true], 'true', false), ...
fnAddParameter('GridHeight','Grid Height (mm)', 'Continuous', [0 20], 10, false), ...
fnAddParameter('ElectrodeLength','Electrode Length (mm)', 'Continuous', [0 100], 40, false),...
fnAddParameter('HoleDiam','Dummy Variable', 'Continuous', [0 1], 0.75, false)};

% Members that must be present in a grid model
strctGridParam.m_strGridType = 'Dual Circular';
strctGridParam.m_abSelectedHoles = [];

return;

function strctParam = fnAddParameter(strName, strDescription, strType, afValuesRange, fInitialValue,bHardCopy)
strctParam.m_strName = strName;
strctParam.m_strDescription = strDescription;
strctParam.m_strType = strType;
strctParam.m_afPossibleValues = afValuesRange;
strctParam.m_Value = fInitialValue;
strctParam.m_bHardCopySelected= bHardCopy;
return;
